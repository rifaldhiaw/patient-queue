{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx", "../app/root.tsx", "../app/routes/register.tsx", "../app/components/FormInput.tsx", "../app/components/FormTextarea.tsx", "../app/models/patient.server.ts", "../app/routes/_index.tsx", "../app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport * as isbotModule from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  let prohibitOutOfOrderStreaming =\n    isBotRequest(request.headers.get(\"user-agent\")) || remixContext.isSpaMode;\n\n  return prohibitOutOfOrderStreaming\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\n// We have some Remix apps in the wild already running with isbot@3 so we need\n// to maintain backwards compatibility even though we want new apps to use\n// isbot@4.  That way, we can ship this as a minor Semver update to @remix-run/dev.\nfunction isBotRequest(userAgent: string | null) {\n  if (!userAgent) {\n    return false;\n  }\n\n  // isbot >= 3.8.0, >4\n  if (\"isbot\" in isbotModule && typeof isbotModule.isbot === \"function\") {\n    return isbotModule.isbot(userAgent);\n  }\n\n  // isbot < 3.8.0\n  if (\"default\" in isbotModule && typeof isbotModule.default === \"function\") {\n    return isbotModule.default(userAgent);\n  }\n\n  return false;\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport styles from \"./tailwind.css\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: styles },\n...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : [])];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"bg-gray-50\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { json, type ActionFunctionArgs } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigate } from \"@remix-run/react\";\nimport { PlusCircle } from \"lucide-react\";\nimport { useEffect } from \"react\";\nimport { FormInput } from \"../components/FormInput\";\nimport { FormTextarea } from \"../components/FormTextarea\";\nimport { addPatient } from \"../models/patient.server\";\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  const age = formData.get(\"age\");\n  const complaint = formData.get(\"complaint\");\n\n  if (typeof name !== \"string\" || !name) {\n    return json({ error: \"Name is required\" }, { status: 400 });\n  }\n\n  if (typeof age !== \"string\" || !age) {\n    return json({ error: \"Age is required\" }, { status: 400 });\n  }\n\n  const ageNumber = parseInt(age, 10);\n  if (isNaN(ageNumber)) {\n    return json({ error: \"Age must be a number\" }, { status: 400 });\n  }\n\n  if (typeof complaint !== \"string\" || !complaint) {\n    return json({ error: \"Complaint is required\" }, { status: 400 });\n  }\n\n  await addPatient(name, ageNumber, complaint);\n  return json({ success: true });\n}\n\nexport default function RegisterPage() {\n  const actionData = useActionData<typeof action>();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (actionData?.success) {\n      navigate(\"/\");\n    }\n  }, [actionData, navigate]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg max-w-md w-full\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">Register New Patient</h1>\n        \n        <Form method=\"post\" className=\"space-y-6\">\n          <FormInput\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            label=\"Patient Name\"\n            placeholder=\"Enter patient name\"\n            required\n            error={actionData?.error === \"Name is required\" ? actionData.error : undefined}\n          />\n\n          <FormInput\n            id=\"age\"\n            name=\"age\"\n            type=\"number\"\n            label=\"Age\"\n            placeholder=\"Enter patient age\"\n            required\n            min=\"0\"\n            error={\n              actionData?.error === \"Age is required\" || actionData?.error === \"Age must be a number\"\n                ? actionData.error\n                : undefined\n            }\n          />\n\n          <FormTextarea\n            id=\"complaint\"\n            name=\"complaint\"\n            label=\"Chief Complaint\"\n            placeholder=\"Enter patient's chief complaint\"\n            required\n            rows={3}\n            error={actionData?.error === \"Complaint is required\" ? actionData.error : undefined}\n          />\n\n          <div className=\"flex justify-end\">\n            <button\n              type=\"button\"\n              onClick={() => navigate(\"/\")}\n              className=\"mr-4 inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <PlusCircle className=\"h-4 w-4 mr-2\" />\n              Register Patient\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}", "import { type InputHTMLAttributes } from 'react';\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  error?: string;\n}\n\nexport function FormInput({ label, error, ...props }: FormInputProps) {\n  return (\n    <div>\n      <label htmlFor={props.id} className=\"block text-sm font-medium text-gray-700\">\n        {label}\n      </label>\n      <div className=\"mt-1\">\n        <input\n          {...props}\n          className=\"h-10 px-4 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n        />\n      </div>\n      {error && (\n        <p className=\"mt-2 text-sm text-red-600\">{error}</p>\n      )}\n    </div>\n  );\n}", "import { type TextareaHTMLAttributes } from 'react';\n\ninterface FormTextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  label: string;\n  error?: string;\n}\n\nexport function FormTextarea({ label, error, ...props }: FormTextareaProps) {\n  return (\n    <div>\n      <label htmlFor={props.id} className=\"block text-sm font-medium text-gray-700\">\n        {label}\n      </label>\n      <div className=\"mt-1\">\n        <textarea\n          {...props}\n          className=\"p-4 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n        />\n      </div>\n      {error && (\n        <p className=\"mt-2 text-sm text-red-600\">{error}</p>\n      )}\n    </div>\n  );\n}", "// In-memory database\nlet patients: Array<{\n  id: string;\n  name: string;\n  age: number;\n  complaint: string;\n  queueNumber: number;\n  status: 'waiting' | 'in-progress' | 'completed';\n  createdAt: Date;\n}> = [\n  {\n    id: '1',\n    name: 'John Doe',\n    age: 35,\n    complaint: 'Fever and headache',\n    queueNumber: 1,\n    status: 'waiting',\n    createdAt: new Date(),\n  },\n  {\n    id: '2',\n    name: 'Jane Smith',\n    age: 28,\n    complaint: 'Sore throat',\n    queueNumber: 2,\n    status: 'in-progress',\n    createdAt: new Date(),\n  },\n];\n\nexport async function getPatients() {\n  return patients;\n}\n\nexport async function addPatient(name: string, age: number, complaint: string) {\n  const newPatient = {\n    id: String(patients.length + 1),\n    name,\n    age,\n    complaint,\n    queueNumber: patients.length + 1,\n    status: 'waiting' as const,\n    createdAt: new Date(),\n  };\n  \n  patients.push(newPatient);\n  return newPatient;\n}\n\nexport async function updatePatientStatus(id: string, status: 'waiting' | 'in-progress' | 'completed') {\n  const patient = patients.find(p => p.id === id);\n  if (patient) {\n    patient.status = status;\n    return patient;\n  }\n  return null;\n}", "import { json, type LoaderFunctionArgs } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { Activity, Users, PlayCircle, CheckCircle } from \"lucide-react\";\nimport { getPatients, updatePatientStatus } from \"../models/patient.server\";\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const patients = await getPatients();\n  const waitingPatients = patients.filter(p => p.status === 'waiting');\n  const lastCalledPatient = patients.find(p => p.status === 'in-progress');\n\n  return json({ \n    patients,\n    waitingCount: waitingPatients.length,\n    lastCalledNumber: lastCalledPatient?.queueNumber || '-'\n  });\n}\n\nexport async function action({ request }: LoaderFunctionArgs) {\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n\n  if (intent === \"updateStatus\") {\n    const id = formData.get(\"id\");\n    const status = formData.get(\"status\");\n    if (typeof id !== \"string\" || typeof status !== \"string\") {\n      return json({ error: \"Invalid request\" }, { status: 400 });\n    }\n    await updatePatientStatus(id, status as 'waiting' | 'in-progress' | 'completed');\n    return json({ success: true });\n  }\n\n  return json({ error: \"Invalid request\" }, { status: 400 });\n}\n\nexport default function Index() {\n  const { patients, waitingCount, lastCalledNumber } = useLoaderData<typeof loader>();\n  \n  return (\n    <div className=\"min-h-screen\">\n      <nav className=\"bg-white shadow-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex items-center\">\n              <Activity className=\"h-8 w-8 text-blue-600\" />\n              <span className=\"ml-2 text-xl font-semibold\">ClinicFlow</span>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n        <div className=\"px-4 py-6 sm:px-0\">\n          <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n            {/* Queue Overview Cards */}\n            <div className=\"grid grid-cols-2 gap-6\">\n              {/* Waiting Patients Card */}\n              <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n                <div className=\"p-5\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <Users className=\"h-6 w-6 text-gray-400\" />\n                    </div>\n                    <div className=\"ml-5 w-0 flex-1\">\n                      <dl>\n                        <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                          Waiting Patients\n                        </dt>\n                        <dd className=\"flex items-baseline\">\n                          <div className=\"text-2xl font-semibold text-gray-900\">\n                            {waitingCount}\n                          </div>\n                        </dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Last Called Number Card */}\n              <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n                <div className=\"p-5\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <PlayCircle className=\"h-6 w-6 text-blue-500\" />\n                    </div>\n                    <div className=\"ml-5 w-0 flex-1\">\n                      <dl>\n                        <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                          Last Called Number\n                        </dt>\n                        <dd className=\"flex items-baseline\">\n                          <div className=\"text-2xl font-semibold text-gray-900\">\n                            {lastCalledNumber}\n                          </div>\n                        </dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Add Patient Card */}\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n              <div className=\"p-5\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n                  Patient Registration\n                </h3>\n                <p className=\"text-sm text-gray-500 mb-4\">\n                  Add a new patient to the queue system.\n                </p>\n                <Link\n                  to=\"/register\"\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                >\n                  Register New Patient\n                </Link>\n              </div>\n            </div>\n\n            {/* Patient Queue Table */}\n            <div className=\"bg-white overflow-hidden shadow rounded-lg col-span-full\">\n              <div className=\"px-4 py-5 sm:p-6\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n                  Current Queue\n                </h3>\n                <div className=\"mt-4\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Queue #\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Patient Name\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Age\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Complaint\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Status\n                          </th>\n                          <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Actions\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                        {patients.map((patient) => (\n                          <tr key={patient.id}>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                              {patient.queueNumber}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                              {patient.name}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                              {patient.age}\n                            </td>\n                            <td className=\"px-6 py-4 text-sm text-gray-900 max-w-xs truncate\">\n                              {patient.complaint}\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\n                                ${patient.status === 'waiting' ? 'bg-yellow-100 text-yellow-800' : \n                                  patient.status === 'in-progress' ? 'bg-blue-100 text-blue-800' : \n                                  'bg-green-100 text-green-800'}`}\n                              >\n                                {patient.status}\n                              </span>\n                            </td>\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                              <div className=\"flex space-x-2\">\n                                {patient.status === 'waiting' && (\n                                  <form method=\"post\" className=\"inline\">\n                                    <input type=\"hidden\" name=\"intent\" value=\"updateStatus\" />\n                                    <input type=\"hidden\" name=\"id\" value={patient.id} />\n                                    <input type=\"hidden\" name=\"status\" value=\"in-progress\" />\n                                    <button\n                                      type=\"submit\"\n                                      className=\"inline-flex items-center p-1 border border-transparent rounded-full text-blue-600 hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                                      title=\"Start Treatment\"\n                                    >\n                                      <PlayCircle className=\"h-5 w-5\" />\n                                    </button>\n                                  </form>\n                                )}\n                                {patient.status === 'in-progress' && (\n                                  <form method=\"post\" className=\"inline\">\n                                    <input type=\"hidden\" name=\"intent\" value=\"updateStatus\" />\n                                    <input type=\"hidden\" name=\"id\" value={patient.id} />\n                                    <input type=\"hidden\" name=\"status\" value=\"completed\" />\n                                    <button\n                                      type=\"submit\"\n                                      className=\"inline-flex items-center p-1 border border-transparent rounded-full text-green-600 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n                                      title=\"Complete Treatment\"\n                                    >\n                                      <CheckCircle className=\"h-5 w-5\" />\n                                    </button>\n                                  </form>\n                                )}\n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}", "import { json, type ActionFunctionArgs } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { Activity } from \"lucide-react\";\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const password = formData.get(\"password\");\n\n  // TODO: Add actual authentication logic\n  if (username === \"admin\" && password === \"admin\") {\n    return json({ success: true });\n  }\n\n  return json(\n    { error: \"Invalid username or password\" },\n    { status: 401 }\n  );\n}\n\nexport default function LoginPage() {\n  const actionData = useActionData<typeof action>();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"flex justify-center\">\n          <Activity className=\"h-12 w-12 text-blue-600\" />\n        </div>\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          ClinicFlow\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Queue Management System\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <Form method=\"post\" className=\"space-y-6\">\n            {actionData?.error && (\n              <div className=\"rounded-md bg-red-50 p-4\">\n                <div className=\"flex\">\n                  <div className=\"text-sm text-red-700\">\n                    {actionData.error}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div>\n              <label\n                htmlFor=\"username\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Username\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"text\"\n                  autoComplete=\"username\"\n                  required\n                  className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Password\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n              >\n                Sign in\n              </button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}", "export default {'entry':{'module':'/build/entry.client-7WBLAGFZ.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-AWWRXQQ5.js','/build/_shared/chunk-HROVJQA4.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-HLTBESNW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-YEF7RX32.js','imports':['/build/_shared/chunk-7B3CUU5R.js','/build/_shared/chunk-ZZQWGIJC.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-XMDCKPEP.js','imports':['/build/_shared/chunk-ZZQWGIJC.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/register':{'id':'routes/register','parentId':'root','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/register-P7F23DUX.js','imports':['/build/_shared/chunk-7B3CUU5R.js','/build/_shared/chunk-ZZQWGIJC.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'37e1af25','hmr':{'runtime':'/build/_shared/chunk-HROVJQA4.js','timestamp':1730435763609},'url':'/build/manifest-37E1AF25.js'};", "\nimport * as entryServer from \"/home/project/node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/register.tsx\";\nimport * as route2 from \"./routes/_index.tsx\";\nimport * as route3 from \"./routes/login.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/register\": {\n      id: \"routes/register\",\n      parentId: \"root\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "jsxDEV", "jsxDEV", "jsxDEV", "action", "json", "jsxDEV", "patients", "json", "action", "action", "json", "Form", "useActionData", "Activity", "jsxDEV"]
}
